import sys
sys.stdin = open("./input.txt")

T = int(input())

for tc in range(1, T+1):
    brackets = input().replace("()", "L") # 레이저를 쏘는 위치를 모두 L 로 치환했습니다.
                                          # ()(((()())(())()))(())
                                          #  L(((LL)(L)L))(L)
    cnt = 0 
    stack = 0                           # stack 는 현재 쌓여있는 막대기의 수를 저장합니다.
    for b in brackets:
        if b == "(":                    # 괄호가 열리면, 막대기가 추가되는 것을 의미합니다. 
            stack += 1
        elif b == ")":
            stack -= 1                  # 괄호가 닫히면, 현재 쌓여있는 막대기가 하나 끝나는 것을 의미합니다.
            cnt += 1                    # 막대기가 끝나는 부분에서, 조각이 하나 추가됩니다.
        elif b == "L":
            cnt += stack          # 레이저를 쏘게 되면, 현재 해당되는 막대기 수 만큼 조각이 생성됩니다.
 
    print(f'#{tc} {cnt}')



# 건우님이 확인하신 것 중에,
# (1) replace() method를 사용하여 레이저 위치를 확인하는 것과
# (2) 그냥 문자열을 돌면서, '(' 이 등장했을 때 바로 다음 것이 ')' 인 경우로 레이저를 확인하는 것

# 두 가지 경우 중 replace 를 사용한 것이 더 빨랐다고 합니다.
# 그런데 단순히 생각했을 때, (1) 처럼 replace 를 사용한 뒤 문자열을 도는 것은 문자열을 두 번 도는 것이고
# (2) 의 경우는 문자열을 한번 도는 경우인데, 왜 문자열을 한번 돈 (2) 의 수행시간이 더 짧은지 의문이 들어서
# 답을 얻고자 질문을 드립니다...