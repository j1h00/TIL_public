"""
    수열 A가 주어졌을 때, 가장 긴 증가하는 부분 수열을 구하는 프로그램을 작성하시오.

    예를 들어, 수열 A = {10, 20, 10, 30, 20, 50} 인 경우에 가장 긴 증가하는 부분 수열은 
    A = {10, 20, 10, 30, 20, 50} 이고, 길이는 4이다.

    # 출력 
    첫째 줄에 수열 A의 가장 긴 증가하는 부분 수열의 길이를 출력한다.

    둘째 줄에는 가장 긴 증가하는 부분 수열을 출력한다. 
    그러한 수열이 여러가지인 경우 아무거나 출력한다.
"""
# 12015 가장 긴 증가하는 부분 수열 와 비슷하나, 수열을 출력해야 한다는 점에서 다르다. 
# bisect 를 이용한 풀이에서는, 최종에선 맞지 않는 수열을 저장하는 경우도 있었다...  
# 따라서 12015 가 아니라 11053 의 방법을 다시 사용하도록 하자. 
import sys

N = int(sys.stdin.readline())
A = list(map(int, input().split()))

dp = [[1,[A[_]]] for _ in range(N)]

# 2중 for loop
for i in range(N):
    for j in range(i): # i 까지의 수들을 확인해서 
        if A[i] > A[j] and dp[i][0] < dp[j][0] + 1: # 만약 i 번째 수가 j 번째 수보다 크다면
            dp[i][0] = dp[j][0] + 1 # dp[i] 를 업데이트 한다.
            dp[i][1] = dp[j][1] + [A[i]]

answer = max(dp)
print(answer[0])
for n in answer[1]:
    print(n, end=" ")