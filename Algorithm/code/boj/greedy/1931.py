"""
    # 회의실 배정 문제 
    한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 
    각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 
    단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 
    회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.
"""
N = int(input())
times = []
for i in range(N):
    times.append(list(map(int, input().split())))


# 1. 그리디 = 현재 상황에서 최선의 선택 (가장 회의가 빨리 끝나는.. )
#            빨리 끝나면, 뒤에 올 수 있는 회의가 많아진다..!              
# 2. 빨리 끝나는 순서대로 정렬, 
# 3. 만약 끝나는 시간이 같다면 시작 시간이 빠른 것 부터..
#    3 3 과 같이 시작 시간과 끝나는 시간이 같은 경우도 존재하므로!



# 빨리 끝나는 순서대로 정렬한다. (끝나는 시간이 같다면 시작 시간이 빠른 것부터)
times = sorted(times, key = lambda x : (x[1], x[0])) 
# or 
# times2 = sorted(times, key = lambda x : x[0])
# times2 = sorted(times2, key = lambda x : x[1])

cnt = 0
end = 0 
for i in range(N):
    if end <= times[i][0]: # 현재 시작 시간이 직전 끝나는 시간보다 더 뒤에 있다면 
        end = times[i][1] # 회의를 배정하고, 끝나는 시간을, 현재 끝나는 시간으로 업데이트 
        cnt += 1 # 배정된 회의 수 + 1
        
print(cnt)